---
layout: post
title: "Kal's Notes: The Art of Agile Development, 2nd Edition"
tags: mgmt tech agile kals_notes
---

<h1>
    Summary
</h1>

<ol>
    <li>
        Section 1 - Improving Agility
        <ol>
            <li>
                <h2>What is Agile?</h2>
                <ul>
                    <li>
                        Agile name highly used, but agile ideas are largely ignored.
                    </li>
                    <li>
                        Early 90s 'CHAOS' report resulted in companies adopting heavy-handed processes to attempt to control development. 
                        This became known as waterfall development. Was 
                    </li>
                    <li>
                        By late 90s, anti-waterfall methodologies were getting attention, 'Extreme Programming', 'Scrum', etc.
                    </li>
                    <li>
                        in 2001, 17 lightweight process proponents got together in Utah. Created Agile Manifesto, w/ 4 Values and 12 Principles.
                        <p>
                            We are uncovering better ways of developing software by doing it and helping others do it. 
                            Through this work we have come to value:
                            <ul>
                                <li>
                                    Individuals and Interactions over Process and Tools
                                </li>
                                <li>
                                    Working software over comprehensive documentation
                                </li>
                                <li>
                                    Customer collaboration over contract negotiation
                                </li>
                                <li>
                                    Responding to change over following a plan
                                </li>
                            </ul>
                            Principles
                            <ul>
                                <li>
                                    Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.
                                </li>
                                <li>
                                    Welcome changing requirements, even late in development. Agile processes harness change for the customer's
                                    competitive advantage.
                                </li>
                                <li>
                                    Deliver working software frequently, from a couple of weeks to a couple of months, with a preference
                                    to the shorter timescale.
                                </li>
                                <li>
                                    Business people and developers must work together daily throughout the project.
                                </li>
                                <li>
                                    Build projects around motivated individuals. Give them the environment and support they need, and trust
                                    them to get the job done.
                                </li>
                                <li>
                                    The most efficient and effective method of conveying information to and within a development team is face to face 
                                    conversation.
                                </li>
                                <li>
                                    Working software is the primary measure of progress.
                                </li>
                                <li>
                                    Agile processes promote sustainable development. The sponsors, developers, and users should be able to 
                                    maintain a constant pace indefinitely.
                                </li>
                                <li>
                                    Continous attention to technical excellence and good design enhances agility.
                                </li>
                                <li>
                                    Simplicity, the art of maximizing the amount of work not done, is essential.
                                </li>
                                <li>
                                    The best architectures, requirements, and designs emerge from self-organizing teams.
                                </li>
                                <li>
                                    At regular intervals, the team reflects on how to become more effective, then tunes and adjust its
                                    behavior accordingly.
                                </li>
                            </ul>
                        </p>
                    </li>

                    <li>
                        Agile teams define success as delivering value, not conforming to a plan. Look for value by finding ways to change plans.
                    </li>
                    <li>
                        
                    </li>
                </ul>
            </li>
        </ol>
    </li>
</ol>