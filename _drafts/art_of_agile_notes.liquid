---
layout: post
title: "Kal's Notes: The Art of Agile Development, 2nd Edition"
tags: mgmt tech agile kals_notes
---

<h1>
    Summary
</h1>

# Section 1 - Improving Agility
- ## What is Agile
    - Agile name highly used, but agile ideas are largely ignored.
    - Early 90s 'CHAOS' report resulted in companies adopting heavy-handed processes to attempt to control development. 
    This became known as waterfall development.
    - By late 90s, anti-waterfall methodologies were getting attention, 'Extreme Programming', 'Scrum', etc.
    - in 2001, 17 lightweight process proponents got together in Utah. Created Agile Manifesto, w/ 4 Values and 12 Principles.
    > We are uncovering better ways of developing software by doing it and helping others do it. 
    Through this work we have come to value:    
        - Individuals and Interactions over Process and Tools
        - Working software over comprehensive documentation
        - Customer collaboration over contract negotiation
        - Responding to change over following a plan
    - ## Principles
        - Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.
        - Welcome changing requirements, even late in development. Agile processes harness change for the customer's
        competitive advantage.
        - Deliver working software frequently, from a couple of weeks to a couple of months, with a preference
        to the shorter timescale.
        - Business people and developers must work together daily throughout the project.
        - Build projects around motivated individuals. Give them the environment and support they need, and trust
        them to get the job done.
        - The most efficient and effective method of conveying information to and within a development team is face to face 
        conversation.
        - Working software is the primary measure of progress.
        - Agile processes promote sustainable development. The sponsors, developers, and users should be able to 
        maintain a constant pace indefinitely.
        - Continous attention to technical excellence and good design enhances agility.
        - Simplicity, the art of maximizing the amount of work not done, is essential.
        - The best architectures, requirements, and designs emerge from self-organizing teams.
        - At regular intervals, the team reflects on how to become more effective, then tunes and adjust its
        behavior accordingly.
    - Agile teams define success as delivering value, not conforming to a plan. Look for value by finding ways to change plans.        